version: '3.3'

services:
  redis:
    image: redis:latest
    restart: always
    volumes:
      - /var/redis:/redis

  redis_insight:
    image: redislabs/redisinsight:latest
    restart: always
    depends_on:
      - redis
    ports:
      - 8001:8001
    volumes:
      - /var/redisinsight:/redisinsight

  db:
    image: postgres:latest
    restart: always
    volumes:
      - /var/postgres:/db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres

  web:
    build: .
    restart: always
    working_dir: /app
    # If you encounter ssl troubles during local development
    # just change the first port number to something else
    # and connect through that port
    ports:
      - 8000:8000
    volumes:
      - ./:/app:Z
      # - staticfiles:/app/staticfiles
    depends_on:
      - redis
      - db
    environment: 
      REDIS_URL: redis://redis:6379/0

      USE_POSTGRES: 'True'
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: postgres

      DEBUG: 'False'
      DISABLE_SSL: 'False'

      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
    command: bash -c "python manage.py migrate && gunicorn telegram_sendall.wsgi --bind 0.0.0.0:8000"

  worker:
    build: .
    working_dir: /app
    # volumes:
    #   - ./:/app:Z
    restart: always
    depends_on: 
      - redis
      - db
    environment: 
      REDIS_URL: redis://redis:6379/0
      USE_POSTGRES: 'True'

      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: postgres

      DEBUG: 'False'
      DISABLE_SSL: 'False'

      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
    command: celery worker --app=telegram_sendall.celery.app --without-heartbeat


  # nginx:
  #   build: ./nginx
  #   restart: always
  #   volumes:
  #     - staticfiles:/app/staticfiles
  #   ports:
  #     - 8002:80
  #   depends_on:
  #     - web

# volumes:
#   staticfiles:
